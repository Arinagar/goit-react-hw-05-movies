{"version":3,"file":"static/js/880.9ede21ee.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Pages/MovieCard/MovieCard.module.css?7ef0","components/Pages/MovieCard/MovieCard.jsx","components/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieCard_backLink__3z-v5\",\"filmWrap\":\"MovieCard_filmWrap__BBn5L\",\"filmImg\":\"MovieCard_filmImg__jnd9J\",\"filmInfo\":\"MovieCard_filmInfo__c9r8K\",\"title\":\"MovieCard_title__UNRle\",\"text\":\"MovieCard_text__oXSNG\",\"link\":\"MovieCard_link__VoONi\"};","import React, { useEffect, useState } from 'react';\nimport { Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { PuffLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\nimport css from './MovieCard.module.css';\n\nimport { getMoviesById } from 'components/services/api';\n\nconst MovieCard = () => {\n  const [movieData, setMovieData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const { movieId } = useParams('');\n  const location = useLocation();\n\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovies = async () => {\n      setError('');\n\n      try {\n        const data = await getMoviesById(movieId);\n        setMovieData(data);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  const {\n    original_title,\n    poster_path,\n    tagline,\n    budget,\n    genres,\n    production_companies,\n    release_date,\n    overview,\n  } = movieData;\n\n  return (\n    <>\n      <h1\n        style={{\n          margin: '0',\n          textAlign: 'center',\n          paddingTop: '10px',\n          paddingBottom: '10px',\n        }}\n      >\n        MOVIE DETAILS\n      </h1>\n      <Link to={backLink} className={css.backLink}>\n        Go back\n      </Link>\n      {isLoading && <PuffLoader color=\"#36d7b7\" size={200} />}\n      <div className={css.filmWrap}>\n        <img\n          src={'https://image.tmdb.org/t/p/w500' + poster_path}\n          alt={original_title}\n          className={css.filmImg}\n        />\n        <div className={css.filmInfo}>\n          <h3 className={css.title}>{original_title}</h3>\n          <p className={css.text}>\n            <b>Tagline: </b>\n            {tagline}\n          </p>\n          <p className={css.text}>\n            <b>Budget: </b>\n            {budget}$\n          </p>\n          <p className={css.text}>\n            <b>Genres: </b>\n            {Array.isArray(genres) &&\n              genres.map(genre => genre.name).join(', ')}\n          </p>\n          <p className={css.text}>\n            <b>Production companies: </b>\n            {Array.isArray(production_companies) &&\n              production_companies.map(company => company.name).join(', ')}\n          </p>\n          <p className={css.text}>\n            <b>Release date : </b>\n            {release_date}\n          </p>\n          <p className={css.text}>\n            <b>Description: </b>\n            {overview}\n          </p>\n          <Link to=\"cast\" state={{ from: backLink }} className={css.link}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: backLink }} className={css.link}>\n            Reviews\n          </Link>\n        </div>\n      </div>\n      <div>\n        <Suspense fallback={<PuffLoader color=\"#36d7b7\" size={200} />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2db21389930b520d8ed134be7fb3bbe4',\n};\n\nexport const getInitialMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getQueryMovies = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["useState","movieData","setMovieData","isLoading","setIsLoading","error","setError","movieId","useParams","location","useLocation","backLink","state","from","useEffect","fetchMovies","getMoviesById","data","toast","original_title","poster_path","tagline","budget","genres","production_companies","release_date","overview","style","margin","textAlign","paddingTop","paddingBottom","to","className","css","PuffLoader","color","size","src","alt","Array","isArray","map","genre","name","join","company","Suspense","fallback","axios","api_key","getInitialMovies","results","getQueryMovies","movie","id","getCast","cast","getReviews"],"sourceRoot":""}