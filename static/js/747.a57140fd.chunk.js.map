{"version":3,"file":"static/js/747.a57140fd.chunk.js","mappings":"2KAqBA,IAlBiB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACZC,GAAWC,EAAAA,EAAAA,MACjB,OACQ,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQG,QAAS,IACf,wBACGH,EAAOI,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GAC7B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMR,GAA1C,SACGI,KAFIC,EAMZ,KAIR,C,2HCiCD,UA7CiB,WACf,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,2FAClBF,EAAS,IADS,mBAIGG,EAAAA,EAAAA,MAJH,OAIVC,EAJU,OAKhBR,EAAUQ,GALM,gDAOhBJ,EAAS,wBAPO,yBAShBF,GAAa,GATG,4EAAH,qDAajBI,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACHF,GACLM,EAAAA,GAAAA,MAAYN,EACb,GAAE,CAACA,KAGF,iCACE,eACEO,MAAO,CACLC,OAAQ,IACRC,UAAW,SACXC,WAAY,QAJhB,wBASA,SAAC,IAAD,CAAUxB,OAAQA,IAEjBY,IAAa,SAAC,IAAD,CAAYa,MAAM,UAAUC,KAAM,QAGrD,C,+LCjDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGJ,IAAMV,EAAgB,mCAAG,sGACPS,EAAAA,EAAAA,IAAU,wBADH,uBACtBR,EADsB,EACtBA,KADsB,kBAEvBA,EAAKU,SAFkB,2CAAH,qDAKhBC,EAAc,mCAAG,WAAMC,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,8BAAiCI,IAD5B,uBACpBZ,EADoB,EACpBA,KADoB,kBAErBA,EAAKU,SAFgB,2CAAH,sDAKdG,EAAa,mCAAG,WAAM1B,GAAN,yFACJqB,EAAAA,EAAAA,IAAA,iBAAoBrB,IADhB,uBACnBa,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAKbc,EAAO,mCAAG,WAAM3B,GAAN,yFACEqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,aADF,uBACba,EADa,EACbA,KADa,kBAEdA,EAAKe,MAFS,2CAAH,sDAKPC,EAAU,mCAAG,WAAM7B,GAAN,yFACDqB,EAAAA,EAAAA,IAAA,iBAAoBrB,EAApB,aADC,uBAChBa,EADgB,EAChBA,KADgB,kBAEjBA,EAAKU,SAFY,2CAAH,qD","sources":["components/FilmList/FilmList.jsx","components/Pages/HomePage/HomePage.jsx","components/services/api.js"],"sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst FilmList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    movies?.length > 0 && (\n      <ul>\n        {movies.map(({ original_title, id }) => {\n          return (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    )\n  );\n};\nexport default FilmList;\n","import { React, useState, useEffect } from 'react';\n\nimport { toast } from 'react-toastify';\nimport { PuffLoader } from 'react-spinners';\n\nimport FilmList from 'components/FilmList/FilmList';\nimport { getInitialMovies } from 'components/services/api';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setError('');\n\n      try {\n        const data = await getInitialMovies();\n        setMovies(data);\n      } catch (error) {\n        setError('something went wrong');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  useEffect(() => {\n    if (!error) return;\n    toast.error(error);\n  }, [error]);\n\n  return (\n    <>\n      <h1\n        style={{\n          margin: '0',\n          textAlign: 'center',\n          paddingTop: '10px',\n        }}\n      >\n        HOME PAGE\n      </h1>\n      <FilmList movies={movies} />\n\n      {isLoading && <PuffLoader color=\"#36d7b7\" size={200} />}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '2db21389930b520d8ed134be7fb3bbe4',\n};\n\nexport const getInitialMovies = async () => {\n  const { data } = await axios.get('/trending/movie/week');\n  return data.results;\n};\n\nexport const getQueryMovies = async movie => {\n  const { data } = await axios.get(`/search/movie?query=${movie}`);\n  return data.results;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["movies","location","useLocation","length","map","original_title","id","to","state","from","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getInitialMovies","data","toast","style","margin","textAlign","paddingTop","color","size","axios","api_key","results","getQueryMovies","movie","getMoviesById","getCast","cast","getReviews"],"sourceRoot":""}